Lab 9 Report
Vladislav Ligai
1) Baseline:
	I created a small Windows program (malware.exe) with the given shell code that emulates malicious behaviour. First I scanned it on VirusTotal, which gave me a detection ratio: 6 / 54, which means that 6 out of 54 antiviruses found this file to be malware. Then I used my own antivirus (Windows Defender) and it stated:
Trojan:Win32/Swort.A
Category: Trojan

Description: This program is dangerous and executes commands from an attacker.

Recommended action: Remove this software immediately.
Antiviruses that found this file to be malicious:
AVG	Win32/Patched.IA	20151130
Avast	Multi:Swrort-A [Trj]	20151130
ClamAV	Win.Trojan.MSShellcode-9	20151130
Microsoft	Trojan:Win32/Swrort.A	20151130
Qihoo-360	HEUR/QVM20.1.Malware.Gen	20151130
Rising	PE:HackTool.Swrort!1.6477 [F]	20151129

Detection ratio:	6 / 54

2) Packing:
	I created a c file called packer.c, which packs the malware using xor operation. I used shellcode that was generated by packer in the next malware executable (malware1.exe). Windows defender didn't detect anything , while fewer virus total antiviruses were able to detect this virus.

Avast	Multi:Swrort-A [Trj]	20151130
ClamAV	Win.Trojan.MSShellcode-9	20151130
Qihoo-360	HEUR/QVM20.1.Malware.Gen	20151130

Detection ratio:	3 / 55

3) Consume memory resources to avoid detection:
	Modified part 2 by adding a recursive function that allocates a large amount of memory everytime it is run before unpacking shell code. None of the antiviruses were able to detect malware this time.

Detection ratio:	0 / 55

4) Consume CPU resources to avoid detection:
	Modified part 2 by adding a for bomb before unpacking shell code. None of the antiviruses were able to detect malware this time.

Detection ratio:	0 / 55

5) Analysis Platform Artifact – “What is my name?”
	Modified part 2 by adding arguments to the main, it requires user to type in the name of the malware as an argument in order to unpack the shell code. None of the antiviruses were able to detect malware this time.

Detection ratio:	0 / 53

6) Sleeping the Analysis Engine Away
	Modified part 2 by adding a large sleep() before unpacking shell code. None of the antiviruses were able to detect malware this time.

Detection ratio:	0 / 54

7) Can you still be detected?
	I added most of the above evasive techniques to my most evasive program called supermalware.c, after which none of the antiviruses on virustotal were able to detect this malware:

Detection ratio:	0 / 55